class ProjectPage extends CustomElm{
	constructor(){
		super();
		this.define(html`
			${new Surface(html`
				<h2>Overview</h2>
				<p class="center bold projectLink"><a href="https://github.com/AdrianMargel/spiral-drawer">Github</a></p>
				${new ImageDisplay("img/spiral59.png")}
				<p>
					This program uses recursively orbiting points to draw interesting spiral patterns. The exact orbit of each point is determined by an arbitrary hard coded function that uses the depth of the point as the input for determining the point's orbit. Changing this function changes the pattern generated by the generator.
				</p>
			`,"lg",false,true)}
			<div class="gap"></div>
			${new Surface(html`
				<h2>Inspiration</h2>
				<p>
					This project started out as a simple demo to show my little sister the basics of sine and cosine and later recursion. Initially the program wasn't all that exciting but when I changed the number of points from a few dozen to a few hundred then some very interesting patterns and behaviors started arising. As I continued to explore these patterns I also continued to refine to code until at some point it became a little more than just a simple recursion demo.
				</p>
			`,"lg")}
			<div class="gap"></div>
			${new Surface(html`
				<h2>Results</h2>
				<p>
					Below are a few examples of patterns produced by the program with different rules.
				</p>
				<h3>Animation</h3>
				${new VideoDisplay("video/spiral5.mp4")}
				<h3>Images</h3>
				${new ImageDisplay("img/spiral54.png")}
				${new ImageDisplay("img/spiral55.png")}
				${new ImageDisplay("img/spiral82_light.png")}
				${new ImageDisplay("img/spiral83.png")}
				${new ImageDisplay("img/spiral61.png")}
				${new ImageDisplay("img/spiral69.png")}
				${new ImageDisplay("img/spiral75.png")}
			`,"lg")}
			<p class="center">${new ButtonLink("back to top",()=>scrollToTop())}</p>
		`);
	}
}
defineElm(ProjectPage,scss`&{
	width: 100%;
	>.gap{
		height: 40px;
	}
	p.center{
		${theme.centerText}
	}
	.bold{
		font-weight: 700;
	}
	.projectLink{
		a{
			padding: 5px 10px;
			background-color: ${theme.color.greyStep(-2)};
			border-radius: 50px;
		}
	}
}`);

let title=bind("Spiral Generator");
let page=bind(null);
page.data=bind({
	content: new ProjectPage()
});