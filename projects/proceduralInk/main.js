class ProjectPage extends CustomElm{
	constructor(){
		super();
		this.define(html`
			${new Surface(html`
				<h2>Overview</h2>
				<p class="center bold projectLink"><a href="https://github.com/AdrianMargel/procedural-ink">Github</a></p>
				${new ImageDisplay("img/ink11.png")}
				<p>
					This program creates interesting abstract patterns. It works by using particles and a grid. The particles' movements are affected by the grid but the particles also modify the grid. This creates feedback loops and complex behaviour from relatively simple rules.
				</p>
			`,"lg",false,true)}
			<div class="gap"></div>
			${new Surface(html`
				<h2>Inspiration</h2>
				<p>
					This was originally created as a test for modeling river formation. The program started to take on a life of its own though. At some point I found the patterns that the program was generating to be more interesting than the rivers I was originally aiming to create and so I just went with it and thus this program was born.
				</p>
			`,"lg")}
			<div class="gap"></div>
			${new Surface(html`
				<h2>Results</h2>
				<p class="center">
					Below are a few examples of patterns generated by the program.
				</p>
				<h3>Animation</h3>
				${new VideoDisplay("video/ink.mp4")}
				<h3>Images</h3>
				${new ImageDisplay("img/ink7.png")}
				${new ImageDisplay("img/ink3.png")}
				${new ImageDisplay("img/ink4.png")}
				${new ImageDisplay("img/ink10.png")}
				${new ImageDisplay("img/ink6.png")}
			`,"lg")}
			<p class="center">${new ButtonLink("back to top",()=>scrollToTop())}</p>
		`);
	}
}
defineElm(ProjectPage,scss`&{
	width: 100%;
	>.gap{
		height: 40px;
	}
	p.center{
		${theme.centerText}
	}
	.bold{
		font-weight: 700;
	}
	.projectLink{
		a{
			padding: 5px 10px;
			background-color: ${theme.color.greyStep(-2)};
			border-radius: 50px;
		}
	}
}`);

let title=bind("Procedural Ink");
let page=bind(null);
page.data=bind({
	content: new ProjectPage()
});