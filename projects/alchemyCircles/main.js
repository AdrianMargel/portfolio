class ProjectPage extends CustomElm{
	constructor(){
		super();
		this.define(html`
			${new Surface(html`
				<h2>Overview</h2>
				<p class="center bold projectLink"><a href="https://github.com/AdrianMargel/alchemy-circles">Github</a></p>
				${new ImageDisplay("img/alc4.png")}
				<p>
					This program is able to generate alchemy circles with different levels of complexity. It is then able to take the resulting alchemy circles and animate them in a visually interesting way by applying rotation effects to the alchemy circle.
				</p>
				<p>
					The alchemy circles are recursively generated by running a generation function. This function creates smaller alchemy circles on each open node. When a new alchemy circle is generated in one of these open nodes new open nodes are created at the corners and center of the circle thus allowing the generative process to go on indefinitely.
				</p>
				<p>
					The generation function itself is somewhat arbitrary. It was created mostly through trial and error, playing around with values and logic until it yielded visually interesting results. In many ways this is as much art as code.
				</p>
			`,"lg",false,true)}
			<div class="gap"></div>
			${new Surface(html`
				<h2>Inspiration</h2>
				<p>
					The idea for this came through a post I found on reddit by u/forkafork <a href="https://www.reddit.com/r/proceduralgeneration/comments/8c0si5/alchemy_circles_procedural_generator/">here</a>. I thought it was a really interesting idea but was disappointed that it was only able to generate small simple alchemy circles. I also found inspiration in japanese anime such as "Full Metal Alchemist" and "Dances with the Dragons" which both include their own interpretation of alchemy circles.
				</p>
			`,"lg")}
			<div class="gap"></div>
			${new Surface(html`
				<h2>Results</h2>
				<p>
					Below are a few examples of alchemy circles generated at different levels complexity.
				</p>
				<h3>Animation</h3>
				${new VideoDisplay("video/alchemy-small.mp4")}
				<h3>Low Complexity</h3>
				${new ImageDisplay("img/alc3.png")}
				<h3>Medium Complexity</h3>
				${new ImageDisplay("img/alc1.png")}
				${new ImageDisplay("img/alc2.png")}
				${new ImageDisplay("img/alc4.png")}
				${new ImageDisplay("img/alc5.png")}
				<h3>High Complexity</h3>
				${new ImageDisplay("img/alc7.png")}
			`,"lg")}
			<p class="center">${new ButtonLink("back to top",()=>scrollToTop())}</p>
		`);
	}
}
defineElm(ProjectPage,scss`&{
	width: 100%;
	>.gap{
		height: 40px;
	}
	p.center{
		${theme.centerText}
	}
	.bold{
		font-weight: 700;
	}
	.projectLink{
		a{
			padding: 5px 10px;
			background-color: ${theme.color.greyStep(-2)};
			border-radius: 50px;
		}
	}
}`);

let title=bind("Alchemy Circles");
let page=bind(null);
page.data=bind({
	content: new ProjectPage()
});